NODE_ENV=development

PORT=80
SECRET=a_very_strong_secret_for_you

# postgres configuration
DB_HOST=skills.cunsq4480d3b.us-east-1.rds.amazonaws.com
DB_PORT=5432
DB_USER=postgres
DB_PASSWORD=Marcus2025!
DB_NAME=SKILLSDB



# To securely generate values for ACCESS_TOKEN_SECRET and REFRESH_TOKEN_SECRET, you can use a cryptographic random string generator. In a production environment, it's recommended to generate these secrets using tools like OpenSSL or Node.js's built-in crypto module.
# const crypto = require('crypto');
ACCESS_TOKEN_SECRET = 9fcbef1fbf6e1fd436812c57b3af05737f2acb4e4faed888442f14e13098abdb5aa8c0c47779ee5e53aac7d4298158b89bf4b367b36bda2d24c6e92e21205972
REFRESH_TOKEN_SECRET=da82114264c9d2644f1ce6f13863a7c91105cc1c79fa9187627bb8c54e46b775bac6d972ff4290b118ac2cd05c683953d1c998a0effe8503972c860d9393039a
JWT_SECRET = abc123mysecret

GOOGLE_GEMINI_API_KEY=AIzaSyCJy33fTLfOKR3T6oWwqBvD2AOwmXDbpZs